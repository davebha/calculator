{
  "{\"sourceRoot\":\"C:\\\\Users\\\\PLC\\\\Projects\\\\calculator\\\\src\\\\server\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\PLC\\\\Projects\\\\calculator\",\"filename\":\"C:\\\\Users\\\\PLC\\\\Projects\\\\calculator\\\\src\\\\server\\\\server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\PLC\\\\Projects\\\\calculator\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\PLC\\\\Projects\\\\calculator\\\\node_modules\\\\babel-plugin-css-modules-transform\\\\build\\\\index.js\",\"visitor\":{\"ImportDefaultSpecifier\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\PLC\\Projects\\calculator\\src\\server\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\PLC\\Projects\\calculator",
      "filename": "C:\\Users\\PLC\\Projects\\calculator\\src\\server\\server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\PLC\\Projects\\calculator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\PLC\\Projects\\calculator\\node_modules\\babel-plugin-css-modules-transform\\build\\index.js",
          "visitor": {
            "ImportDefaultSpecifier": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\PLC\\Projects\\calculator\\src\\server\\server.js",
        "plugins": [
          "jsx",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\PLC\\Projects\\calculator\\src\\server\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\PLC\\Projects\\calculator\\src\\server\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _server = _interopRequireDefault(require(\"react-dom/server\"));\n\nvar _App = _interopRequireDefault(require(\"../components/App\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar server = (0, _express[\"default\"])();\nserver.use(_express[\"default\"][\"static\"]('dist'));\nserver.get('/', function (req, res) {\n  var initialMarkup = _server[\"default\"].renderToString( /*#__PURE__*/_react[\"default\"].createElement(_App[\"default\"], null));\n\n  res.send(\"\\n    <html>\\n      <head>\\n        <title>Sample React App</title>\\n      </head>\\n      <body>\\n        <div id=\\\"mountNode\\\">\".concat(initialMarkup, \"</div>\\n        <script src=\\\"/main.js\\\"></script>\\n      </body>\\n    </html>\\n  \"));\n});\nserver.listen(4242, function () {\n  return console.log('Server is running...');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJzZXJ2ZXIiLCJ1c2UiLCJleHByZXNzIiwiZ2V0IiwicmVxIiwicmVzIiwiaW5pdGlhbE1hcmt1cCIsIlJlYWN0RE9NU2VydmVyIiwicmVuZGVyVG9TdHJpbmciLCJzZW5kIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQU1BLE1BQU0sR0FBRywwQkFBZjtBQUNBQSxNQUFNLENBQUNDLEdBQVAsQ0FBV0MsOEJBQWUsTUFBZixDQUFYO0FBRUFGLE1BQU0sQ0FBQ0csR0FBUCxDQUFXLEdBQVgsRUFBZ0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDNUIsTUFBTUMsYUFBYSxHQUFHQyxtQkFBZUMsY0FBZixlQUE4QixnQ0FBQyxlQUFELE9BQTlCLENBQXRCOztBQUVBSCxFQUFBQSxHQUFHLENBQUNJLElBQUosMklBTTRCSCxhQU41QjtBQVdELENBZEQ7QUFnQkFOLE1BQU0sQ0FBQ1UsTUFBUCxDQUFjLElBQWQsRUFBb0I7QUFBQSxTQUFNQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSxzQkFBWixDQUFOO0FBQUEsQ0FBcEIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxQTENcXFByb2plY3RzXFxjYWxjdWxhdG9yXFxzcmNcXHNlcnZlclxcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBSZWFjdERPTVNlcnZlciBmcm9tICdyZWFjdC1kb20vc2VydmVyJztcclxuaW1wb3J0IEFwcCBmcm9tICcuLi9jb21wb25lbnRzL0FwcCc7XHJcblxyXG5jb25zdCBzZXJ2ZXIgPSBleHByZXNzKCk7XHJcbnNlcnZlci51c2UoZXhwcmVzcy5zdGF0aWMoJ2Rpc3QnKSk7XHJcblxyXG5zZXJ2ZXIuZ2V0KCcvJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29uc3QgaW5pdGlhbE1hcmt1cCA9IFJlYWN0RE9NU2VydmVyLnJlbmRlclRvU3RyaW5nKDxBcHAgLz4pO1xyXG5cclxuICByZXMuc2VuZChgXHJcbiAgICA8aHRtbD5cclxuICAgICAgPGhlYWQ+XHJcbiAgICAgICAgPHRpdGxlPlNhbXBsZSBSZWFjdCBBcHA8L3RpdGxlPlxyXG4gICAgICA8L2hlYWQ+XHJcbiAgICAgIDxib2R5PlxyXG4gICAgICAgIDxkaXYgaWQ9XCJtb3VudE5vZGVcIj4ke2luaXRpYWxNYXJrdXB9PC9kaXY+XHJcbiAgICAgICAgPHNjcmlwdCBzcmM9XCIvbWFpbi5qc1wiPjwvc2NyaXB0PlxyXG4gICAgICA8L2JvZHk+XHJcbiAgICA8L2h0bWw+XHJcbiAgYClcclxufSk7XHJcblxyXG5zZXJ2ZXIubGlzdGVuKDQyNDIsICgpID0+IGNvbnNvbGUubG9nKCdTZXJ2ZXIgaXMgcnVubmluZy4uLicpKTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "server",
        "use",
        "express",
        "get",
        "req",
        "res",
        "initialMarkup",
        "ReactDOMServer",
        "renderToString",
        "send",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,GAAG,0BAAf;AACAA,MAAM,CAACC,GAAP,CAAWC,8BAAe,MAAf,CAAX;AAEAF,MAAM,CAACG,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC5B,MAAMC,aAAa,GAAGC,mBAAeC,cAAf,eAA8B,gCAAC,eAAD,OAA9B,CAAtB;;AAEAH,EAAAA,GAAG,CAACI,IAAJ,2IAM4BH,aAN5B;AAWD,CAdD;AAgBAN,MAAM,CAACU,MAAP,CAAc,IAAd,EAAoB;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAAN;AAAA,CAApB",
      "sourceRoot": "C:\\Users\\PLC\\Projects\\calculator\\src\\server\\",
      "sourcesContent": [
        "import express from 'express';\r\nimport React from 'react';\r\nimport ReactDOMServer from 'react-dom/server';\r\nimport App from '../components/App';\r\n\r\nconst server = express();\r\nserver.use(express.static('dist'));\r\n\r\nserver.get('/', (req, res) => {\r\n  const initialMarkup = ReactDOMServer.renderToString(<App />);\r\n\r\n  res.send(`\r\n    <html>\r\n      <head>\r\n        <title>Sample React App</title>\r\n      </head>\r\n      <body>\r\n        <div id=\"mountNode\">${initialMarkup}</div>\r\n        <script src=\"/main.js\"></script>\r\n      </body>\r\n    </html>\r\n  `)\r\n});\r\n\r\nserver.listen(4242, () => console.log('Server is running...'));"
      ]
    },
    "sourceType": "script",
    "mtime": 1596472960781
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\PLC\\\\Projects\\\\calculator\\\\src\\\\components\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\PLC\\\\Projects\\\\calculator\",\"filename\":\"C:\\\\Users\\\\PLC\\\\Projects\\\\calculator\\\\src\\\\components\\\\App.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\PLC\\\\Projects\\\\calculator\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\PLC\\\\Projects\\\\calculator\\\\node_modules\\\\babel-plugin-css-modules-transform\\\\build\\\\index.js\",\"visitor\":{\"ImportDefaultSpecifier\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\PLC\\Projects\\calculator\\src\\components\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\PLC\\Projects\\calculator",
      "filename": "C:\\Users\\PLC\\Projects\\calculator\\src\\components\\App.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\PLC\\Projects\\calculator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\PLC\\Projects\\calculator\\node_modules\\babel-plugin-css-modules-transform\\build\\index.js",
          "visitor": {
            "ImportDefaultSpecifier": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\PLC\\Projects\\calculator\\src\\components\\App.js",
        "plugins": [
          "jsx",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\PLC\\Projects\\calculator\\src\\components\\App.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\PLC\\Projects\\calculator\\src\\components\\",
        "sourceFileName": "App.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = App;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _utils = _interopRequireDefault(require(\"./utils\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar OP_SIGN = [\"/\", \"*\", \"+\", \"-\"];\nvar GROUPING_SIGN = [\"(\", \")\"]; //const displayValues = [];\n\nvar Grid = function Grid(props) {\n  return /*#__PURE__*/_react[\"default\"].createElement(\"button\", {\n    className: \"grid\",\n    onClick: function onClick() {\n      return props.onClick(props.number, props.type);\n    }\n  }, output(props.number, props.type));\n};\n\nvar Clear = function Clear(props) {\n  return /*#__PURE__*/_react[\"default\"].createElement(\"button\", {\n    className: \"grid\",\n    onClick: function onClick() {\n      return props.onClick(props.number, props.type);\n    }\n  }, \"C\");\n};\n\nvar Equals = function Equals(props) {\n  return /*#__PURE__*/_react[\"default\"].createElement(\"button\", {\n    className: \"grid\",\n    onClick: function onClick() {\n      return props.onClick(props.valueToOperate);\n    }\n  }, \"=\");\n};\n\nvar output = function output(number, type) {\n  if (type == \"digit\") {\n    return number;\n  } else if (type == \"grouping\") {\n    return GROUPING_SIGN[number];\n  } else if (type == \"operation\") {\n    return OP_SIGN[number];\n  }\n};\n\nvar Display = function Display(props) {\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, props.values);\n};\n\nfunction App() {\n  var _useState = (0, _react.useState)([\"0\"]),\n      _useState2 = _slicedToArray(_useState, 2),\n      displayValues = _useState2[0],\n      setDisplayValues = _useState2[1];\n\n  var handleClick = function handleClick(number, type) {\n    //const lastValue = displayValues[displayValues.length - 1];\n    //const valueToConcat = 0;\n    var valueCopy = Array.from(displayValues);\n    var lastValueIndex = displayValues.length - 1;\n    var displayValuesLastValue = displayValues[lastValueIndex];\n    var strNumber = String(number);\n\n    if (type == \"digit\") {\n      if (displayValues.length == 1) {\n        if (displayValues.includes(\"0\")) {\n          if (number != 0) {\n            setDisplayValues([strNumber]);\n          }\n        } else if (displayValues.includes(\"(\")) {\n          setDisplayValues([].concat(_toConsumableArray(displayValues), [strNumber]));\n        } else {\n          // console.log(valueCopy);\n          valueCopy[0] = valueCopy[0] + strNumber;\n          console.log(valueCopy);\n          setDisplayValues(_toConsumableArray(valueCopy));\n        }\n      } else {\n        if (parseInt(displayValuesLastValue) == 0) {\n          valueCopy[lastValueIndex] = strNumber;\n          setDisplayValues(_toConsumableArray(valueCopy));\n          console.log(displayValues);\n        } else if (displayValuesLastValue == \")\") {\n          valueCopy[lastValueIndex] = \"*\";\n          setDisplayValues([].concat(_toConsumableArray(displayValues), [valueCopy[lastValueIndex], strNumber]));\n        } else if (parseInt(displayValuesLastValue)) {\n          valueCopy[lastValueIndex] = valueCopy[lastValueIndex] + strNumber;\n          setDisplayValues(_toConsumableArray(valueCopy));\n          console.log(displayValues);\n        } else {\n          setDisplayValues([].concat(_toConsumableArray(displayValues), [strNumber]));\n          console.log(displayValues);\n        }\n      }\n    } else if (type == \"operation\") {\n      if (parseInt(displayValuesLastValue) >= 0 || displayValuesLastValue === \")\") {\n        setDisplayValues([].concat(_toConsumableArray(displayValues), [OP_SIGN[number]]));\n        console.log(displayValues);\n      }\n    } else if (type == \"grouping\") {\n      if (parseInt(displayValuesLastValue) == 0) {\n        valueCopy[lastValueIndex] = GROUPING_SIGN[number];\n        setDisplayValues(_toConsumableArray(valueCopy));\n      } else if (parseInt(displayValuesLastValue) && number == 0) {\n        valueCopy[lastValueIndex] = \"*\";\n        setDisplayValues([].concat(_toConsumableArray(displayValues), [valueCopy[lastValueIndex], GROUPING_SIGN[number]]));\n      } else {\n        setDisplayValues([].concat(_toConsumableArray(displayValues), [GROUPING_SIGN[number]]));\n      }\n    } else if (type == \"clear\") {\n      //valueCopy = [];\n      setDisplayValues([\"0\"]);\n    }\n\n    console.log(displayValues);\n  };\n\n  var Calculate = function Calculate(valuesToCalculate) {\n    var arr_length = valuesToCalculate.length;\n    var arrayAsCalculation = [];\n    var valueCounter = 0;\n    var firstOperandIndex = 0;\n    var operationIndex = valueCounter + 1;\n    var operation = 0;\n    var secondOperandIndex = operationIndex + 1;\n    var result = 0;\n    var firstOperand = 0;\n    var secondOperand = 0;\n    var operationInProgress = false;\n    secondOperand = parseInt(valuesToCalculate[secondOperandIndex]);\n    operation = valuesToCalculate[operationIndex];\n\n    if (arr_length != 1) {\n      if (valuesToCalculate.includes(\"/\") || valuesToCalculate.includes(\"*\")) {\n        while (valueCounter < arr_length) {\n          if (operation != \"/\" && operation != \"*\") {\n            arrayAsCalculation.push(valuesToCalculate[valueCounter]);\n\n            if (operationIndex < arr_length) {\n              arrayAsCalculation.push(operation);\n            }\n          }\n\n          while (operation == \"/\" || operation == \"*\") {\n            if (operationInProgress == false) {\n              secondOperandIndex = operationIndex + 1;\n              firstOperand = parseInt(valuesToCalculate[valueCounter]);\n              secondOperand = parseInt(valuesToCalculate[secondOperandIndex]);\n              operationInProgress = true;\n            }\n\n            switch (operation) {\n              case \"/\":\n                result = firstOperand / secondOperand;\n                break;\n\n              case \"*\":\n                result = firstOperand * secondOperand;\n                break;\n            }\n\n            if (secondOperandIndex < arr_length) {\n              firstOperand = result;\n              valueCounter += 2;\n              operationIndex += 2;\n              secondOperandIndex += 2;\n              operation = valuesToCalculate[operationIndex];\n              secondOperand = parseInt(valuesToCalculate[secondOperandIndex]);\n            }\n          }\n\n          if (operationInProgress == true) {\n            if (operationIndex < arr_length) {\n              arrayAsCalculation.push(result.toString());\n              arrayAsCalculation.push(operation);\n            } else if (operationIndex == arr_length) {\n              arrayAsCalculation.push(result.toString());\n            }\n\n            valueCounter += 2;\n            operationIndex += 2;\n            operation = valuesToCalculate[operationIndex];\n            operationInProgress = false;\n          } else {\n            valueCounter += 2;\n\n            if (operationIndex < arr_length) {\n              operationIndex += 2;\n              operation = valuesToCalculate[operationIndex];\n            }\n          }\n        }\n      } else if (valuesToCalculate.includes(\"+\") || valuesToCalculate.includes(\"-\")) {\n        firstOperand = parseInt(valuesToCalculate[firstOperandIndex]);\n\n        while (operationIndex < arr_length) {\n          if (operation == \"+\") {\n            result = firstOperand + secondOperand;\n          } else {\n            result = firstOperand - secondOperand;\n          }\n\n          if (secondOperandIndex < arr_length) {\n            firstOperand = result;\n            operationIndex += 2;\n            secondOperandIndex += 2;\n            operation = valuesToCalculate[operationIndex];\n            secondOperand = parseInt(valuesToCalculate[secondOperandIndex]);\n          }\n        }\n      }\n\n      if (arrayAsCalculation.length != 0) {\n        arr_length = arrayAsCalculation.length;\n        firstOperandIndex = 0;\n        firstOperand = parseInt(arrayAsCalculation[firstOperandIndex]);\n        operationIndex = firstOperandIndex + 1;\n        operation = arrayAsCalculation[operationIndex];\n        secondOperandIndex = operationIndex + 1;\n        secondOperand = parseInt(arrayAsCalculation[secondOperandIndex]);\n\n        while (operationIndex < arr_length) {\n          if (operation == \"+\") {\n            result = firstOperand + secondOperand;\n          } else {\n            result = firstOperand - secondOperand;\n          }\n\n          if (operationIndex < arr_length) {\n            firstOperand = result;\n            operationIndex += 2;\n            secondOperandIndex += 2;\n            operation = arrayAsCalculation[operationIndex];\n            secondOperand = parseInt(arrayAsCalculation[secondOperandIndex]);\n          }\n        }\n      }\n    }\n\n    setDisplayValues([result.toString()]);\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"body\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"h2\", null, \"Sample calculator application.\"), /*#__PURE__*/_react[\"default\"].createElement(\"br\", null), /*#__PURE__*/_react[\"default\"].createElement(\"br\", null), /*#__PURE__*/_react[\"default\"].createElement(\"br\", null), /*#__PURE__*/_react[\"default\"].createElement(\"br\", null), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"top-box\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(Display, {\n    values: displayValues\n  })), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"bottom-box\"\n  }, _utils[\"default\"].range(7, 9).map(function (number) {\n    return /*#__PURE__*/_react[\"default\"].createElement(Grid, {\n      key: number,\n      type: \"digit\",\n      number: number,\n      onClick: handleClick\n    });\n  }), /*#__PURE__*/_react[\"default\"].createElement(Grid, {\n    type: \"operation\",\n    number: 0,\n    onClick: handleClick\n  }), _utils[\"default\"].range(4, 6).map(function (number) {\n    return /*#__PURE__*/_react[\"default\"].createElement(Grid, {\n      key: number,\n      type: \"digit\",\n      number: number,\n      onClick: handleClick\n    });\n  }), /*#__PURE__*/_react[\"default\"].createElement(Grid, {\n    key: 1,\n    type: \"operation\",\n    number: 1,\n    onClick: handleClick\n  }), _utils[\"default\"].range(1, 3).map(function (number) {\n    return /*#__PURE__*/_react[\"default\"].createElement(Grid, {\n      key: number,\n      type: \"digit\",\n      number: number,\n      onClick: handleClick\n    });\n  }), /*#__PURE__*/_react[\"default\"].createElement(Grid, {\n    key: 2,\n    type: \"operation\",\n    number: 2,\n    onClick: handleClick\n  }), /*#__PURE__*/_react[\"default\"].createElement(Equals, {\n    valueToOperate: displayValues,\n    onClick: Calculate\n  }), /*#__PURE__*/_react[\"default\"].createElement(Grid, {\n    key: 0,\n    type: \"digit\",\n    number: 0,\n    onClick: handleClick\n  }), /*#__PURE__*/_react[\"default\"].createElement(Clear, {\n    type: \"clear\",\n    onClick: handleClick\n  }), /*#__PURE__*/_react[\"default\"].createElement(Grid, {\n    key: 3,\n    type: \"operation\",\n    number: 3,\n    onClick: handleClick\n  }), _utils[\"default\"].range(0, 1).map(function (number) {\n    return /*#__PURE__*/_react[\"default\"].createElement(Grid, {\n      key: number,\n      type: \"grouping\",\n      number: number,\n      onClick: handleClick\n    });\n  })));\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "App.js"
      ],
      "names": [
        "OP_SIGN",
        "GROUPING_SIGN",
        "Grid",
        "props",
        "onClick",
        "number",
        "type",
        "output",
        "Clear",
        "Equals",
        "valueToOperate",
        "Display",
        "values",
        "App",
        "displayValues",
        "setDisplayValues",
        "handleClick",
        "valueCopy",
        "Array",
        "from",
        "lastValueIndex",
        "length",
        "displayValuesLastValue",
        "strNumber",
        "String",
        "includes",
        "console",
        "log",
        "parseInt",
        "Calculate",
        "valuesToCalculate",
        "arr_length",
        "arrayAsCalculation",
        "valueCounter",
        "firstOperandIndex",
        "operationIndex",
        "operation",
        "secondOperandIndex",
        "result",
        "firstOperand",
        "secondOperand",
        "operationInProgress",
        "push",
        "toString",
        "utils",
        "range",
        "map"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\PLC\\Projects\\calculator\\src\\components\\",
      "sourcesContent": [
        "import React, { useState, useEffect } from 'react';\r\nimport utils from './utils';\r\nimport '../styles/index.css';\r\n\r\n\r\n\r\nconst OP_SIGN = [\"/\", \"*\", \"+\", \"-\"];\r\n\r\nconst GROUPING_SIGN = [\"(\", \")\"];\r\n\r\n//const displayValues = [];\r\n\r\nconst Grid = props => {\r\n    return <button className=\"grid\" onClick={() => props.onClick(props.number, props.type)}>{output(props.number, props.type)}</button>;\r\n\r\n};\r\n\r\nconst Clear = props => {\r\n    return <button className=\"grid\" onClick={() => props.onClick(props.number, props.type)}>{\"C\"}</button>\r\n};\r\nconst Equals = props => {\r\n\r\n    return <button className=\"grid\" onClick={() => props.onClick(props.valueToOperate)}>{\"=\"}</button>;\r\n}\r\nconst output = (number, type) => {\r\n\r\n    if (type == \"digit\") {\r\n        return number;\r\n    } else if (type == \"grouping\") {\r\n        return GROUPING_SIGN[number];\r\n    } else if (type == \"operation\") {\r\n        return OP_SIGN[number];\r\n    }\r\n\r\n}\r\n\r\nconst Display = props => {\r\n\r\n    return <div>{props.values}</div>;\r\n};\r\n\r\n\r\nexport default function App() {\r\n\r\n\r\n\r\n    const [displayValues, setDisplayValues] = useState([\"0\"]);\r\n\r\n\r\n    const handleClick = (number, type) => {\r\n\r\n        //const lastValue = displayValues[displayValues.length - 1];\r\n\r\n        //const valueToConcat = 0;\r\n        const valueCopy = Array.from(displayValues);\r\n        const lastValueIndex = displayValues.length - 1;\r\n        const displayValuesLastValue = displayValues[lastValueIndex];\r\n        const strNumber = String(number);\r\n\r\n        if (type == \"digit\") {\r\n\r\n            if (displayValues.length == 1) {\r\n\r\n                if (displayValues.includes(\"0\")) {\r\n\r\n                    if (number != 0) {\r\n\r\n                        setDisplayValues([strNumber]);\r\n\r\n                    }\r\n\r\n                } else if (displayValues.includes(\"(\")) {\r\n\r\n                    setDisplayValues([...displayValues, strNumber]);\r\n\r\n                } else {\r\n                    // console.log(valueCopy);\r\n                    valueCopy[0] = valueCopy[0] + strNumber;\r\n                    console.log(valueCopy);\r\n                    setDisplayValues([...valueCopy]);\r\n                }\r\n\r\n\r\n            } else {\r\n\r\n                if (parseInt(displayValuesLastValue) == 0) {\r\n\r\n                    valueCopy[lastValueIndex] = strNumber;\r\n                    setDisplayValues([...valueCopy]);\r\n                    console.log(displayValues);\r\n\r\n                } else if (displayValuesLastValue == \")\") {\r\n\r\n                    valueCopy[lastValueIndex] = \"*\";\r\n                    setDisplayValues([...displayValues, valueCopy[lastValueIndex], strNumber]);\r\n\r\n\r\n                } else if (parseInt(displayValuesLastValue)) {\r\n\r\n                    valueCopy[lastValueIndex] = valueCopy[lastValueIndex] + strNumber;\r\n                    setDisplayValues([...valueCopy]);\r\n                    console.log(displayValues);\r\n                } else {\r\n\r\n                    setDisplayValues([...displayValues, strNumber]);\r\n                    console.log(displayValues);\r\n\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else if (type == \"operation\") {\r\n\r\n            if (parseInt(displayValuesLastValue) >= 0 || displayValuesLastValue === \")\") {\r\n\r\n                setDisplayValues([...displayValues, OP_SIGN[number]]);\r\n                console.log(displayValues);\r\n            }\r\n\r\n\r\n        } else if (type == \"grouping\") {\r\n\r\n            if (parseInt(displayValuesLastValue) == 0) {\r\n\r\n                valueCopy[lastValueIndex] = GROUPING_SIGN[number];\r\n                setDisplayValues([...valueCopy]);\r\n\r\n            } else if (parseInt(displayValuesLastValue) && number == 0) {\r\n\r\n                valueCopy[lastValueIndex] = \"*\";\r\n                setDisplayValues([...displayValues, valueCopy[lastValueIndex], GROUPING_SIGN[number]]);\r\n            } else {\r\n\r\n                setDisplayValues([...displayValues, GROUPING_SIGN[number]]);\r\n            }\r\n\r\n\r\n\r\n        } else if (type == \"clear\") {\r\n\r\n            //valueCopy = [];\r\n            setDisplayValues([\"0\"]);\r\n\r\n        }\r\n\r\n        console.log(displayValues);\r\n\r\n\r\n    };\r\n\r\n    const Calculate = (valuesToCalculate) => {\r\n\r\n\r\n        var arr_length = valuesToCalculate.length;\r\n        var arrayAsCalculation = [];\r\n        var valueCounter = 0;\r\n        var firstOperandIndex = 0;\r\n        var operationIndex = valueCounter + 1;\r\n        var operation = 0;\r\n        var secondOperandIndex = operationIndex + 1;\r\n        var result = 0;\r\n        var firstOperand = 0;\r\n        var secondOperand = 0;\r\n        var operationInProgress = false;\r\n        secondOperand = parseInt(valuesToCalculate[secondOperandIndex]);\r\n        operation = valuesToCalculate[operationIndex];\r\n\r\n        if (arr_length != 1) {\r\n\r\n            if (valuesToCalculate.includes(\"/\") || valuesToCalculate.includes(\"*\")) {\r\n\r\n                while (valueCounter < arr_length) {\r\n\r\n                    if (operation != \"/\" && operation != \"*\") {\r\n                        arrayAsCalculation.push(valuesToCalculate[valueCounter]);\r\n                        if (operationIndex < arr_length) {\r\n                            arrayAsCalculation.push(operation);\r\n                        }\r\n\r\n                    }\r\n\r\n                    while ((operation == \"/\" || operation == \"*\")) {\r\n\r\n                        if (operationInProgress == false) {\r\n\r\n                            secondOperandIndex = operationIndex + 1;\r\n                            firstOperand = parseInt(valuesToCalculate[valueCounter]);\r\n                            secondOperand = parseInt(valuesToCalculate[secondOperandIndex]);\r\n                            operationInProgress = true;\r\n\r\n                        }\r\n\r\n                        switch (operation) {\r\n\r\n                            case \"/\":\r\n                                result = firstOperand / secondOperand;\r\n                                break;\r\n                            case \"*\":\r\n                                result = firstOperand * secondOperand;\r\n                                break;\r\n\r\n                        }\r\n\r\n\r\n                        if (secondOperandIndex < arr_length) {\r\n                            firstOperand = result;\r\n                            valueCounter += 2;\r\n                            operationIndex += 2;\r\n                            secondOperandIndex += 2;\r\n                            operation = valuesToCalculate[operationIndex];\r\n                            secondOperand = parseInt(valuesToCalculate[secondOperandIndex]);\r\n                        }\r\n\r\n                    }\r\n\r\n\r\n                    if (operationInProgress == true) {\r\n\r\n                        if (operationIndex < arr_length) {\r\n                            arrayAsCalculation.push(result.toString());\r\n                            arrayAsCalculation.push(operation);\r\n                        } else if (operationIndex == arr_length) {\r\n\r\n                            arrayAsCalculation.push(result.toString());\r\n\r\n                        }\r\n                        valueCounter += 2;\r\n                        operationIndex += 2;\r\n                        operation = valuesToCalculate[operationIndex];\r\n\r\n                        operationInProgress = false;\r\n                    } else {\r\n\r\n\r\n                        valueCounter += 2;\r\n                        if (operationIndex < arr_length) {\r\n                            operationIndex += 2;\r\n                            operation = valuesToCalculate[operationIndex];\r\n                        }\r\n\r\n                    }\r\n\r\n\r\n\r\n\r\n\r\n                }\r\n\r\n            } else if (valuesToCalculate.includes(\"+\") || valuesToCalculate.includes(\"-\")) {\r\n\r\n                firstOperand = parseInt(valuesToCalculate[firstOperandIndex]);\r\n\r\n                while (operationIndex < arr_length) {\r\n\r\n                    if (operation == \"+\") {\r\n\r\n                        result = firstOperand + secondOperand;\r\n\r\n                    } else {\r\n\r\n                        result = firstOperand - secondOperand;\r\n\r\n                    }\r\n\r\n                    if (secondOperandIndex < arr_length) {\r\n\r\n                        firstOperand = result;\r\n                        operationIndex += 2;\r\n                        secondOperandIndex += 2;\r\n                        operation = valuesToCalculate[operationIndex];\r\n                        secondOperand = parseInt(valuesToCalculate[secondOperandIndex]);\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            if (arrayAsCalculation.length != 0) {\r\n\r\n                arr_length = arrayAsCalculation.length;\r\n                firstOperandIndex = 0;\r\n                firstOperand = parseInt(arrayAsCalculation[firstOperandIndex]);\r\n                operationIndex = firstOperandIndex + 1;\r\n                operation = arrayAsCalculation[operationIndex];\r\n                secondOperandIndex = operationIndex + 1;\r\n                secondOperand = parseInt(arrayAsCalculation[secondOperandIndex]);\r\n\r\n\r\n                while (operationIndex < arr_length) {\r\n\r\n                    if (operation == \"+\") {\r\n\r\n                        result = firstOperand + secondOperand;\r\n\r\n                    } else {\r\n\r\n                        result = firstOperand - secondOperand;\r\n\r\n                    }\r\n\r\n                    if (operationIndex < arr_length) {\r\n\r\n                        firstOperand = result;\r\n                        operationIndex += 2;\r\n                        secondOperandIndex += 2;\r\n                        operation = arrayAsCalculation[operationIndex];\r\n                        secondOperand = parseInt(arrayAsCalculation[secondOperandIndex]);\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        setDisplayValues([result.toString()]);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"body\">\r\n            <h2>Sample calculator application.</h2>\r\n            <br />\r\n            <br />\r\n\r\n            <br />\r\n            <br />\r\n            <div className=\"top-box\">\r\n                <Display values={displayValues} />\r\n            </div>\r\n            <div className=\"bottom-box\">\r\n\r\n                {\r\n                    utils.range(7, 9).map(number =>\r\n                        <Grid key={number} type=\"digit\" number={number} onClick={handleClick} />\r\n                    )\r\n                }\r\n                {<Grid type=\"operation\" number={0} onClick={handleClick} />}\r\n\r\n                {\r\n                    utils.range(4, 6).map(number =>\r\n                        <Grid key={number} type=\"digit\" number={number} onClick={handleClick} />\r\n                    )\r\n                }\r\n                {<Grid key={1} type=\"operation\" number={1} onClick={handleClick} />}\r\n                {\r\n                    utils.range(1, 3).map(number =>\r\n                        <Grid key={number} type=\"digit\" number={number} onClick={handleClick} />\r\n                    )\r\n                }\r\n                {<Grid key={2} type=\"operation\" number={2} onClick={handleClick} />}\r\n                {\r\n                    <Equals valueToOperate={displayValues} onClick={Calculate} />\r\n                }\r\n                {\r\n                    <Grid key={0} type=\"digit\" number={0} onClick={handleClick} />\r\n                }\r\n                {\r\n                    <Clear type=\"clear\" onClick={handleClick} />\r\n                }\r\n                {<Grid key={3} type=\"operation\" number={3} onClick={handleClick} />}\r\n                {\r\n                    utils.range(0, 1).map(number =>\r\n                        <Grid key={number} type=\"grouping\" number={number} onClick={handleClick} />\r\n                    )\r\n                }\r\n            </div>\r\n\r\n        </div >\r\n    );\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1599767416428
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\PLC\\\\Projects\\\\calculator\\\\src\\\\components\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\PLC\\\\Projects\\\\calculator\",\"filename\":\"C:\\\\Users\\\\PLC\\\\Projects\\\\calculator\\\\src\\\\components\\\\utils.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\PLC\\\\Projects\\\\calculator\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\PLC\\\\Projects\\\\calculator\\\\node_modules\\\\babel-plugin-css-modules-transform\\\\build\\\\index.js\",\"visitor\":{\"ImportDefaultSpecifier\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\PLC\\Projects\\calculator\\src\\components\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\PLC\\Projects\\calculator",
      "filename": "C:\\Users\\PLC\\Projects\\calculator\\src\\components\\utils.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\PLC\\Projects\\calculator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\PLC\\Projects\\calculator\\node_modules\\babel-plugin-css-modules-transform\\build\\index.js",
          "visitor": {
            "ImportDefaultSpecifier": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\PLC\\Projects\\calculator\\src\\components\\utils.js",
        "plugins": [
          "jsx",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\PLC\\Projects\\calculator\\src\\components\\utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\PLC\\Projects\\calculator\\src\\components\\",
        "sourceFileName": "utils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n// Math science\nvar utils = {\n  // Sum an array\n  sum: function sum(arr) {\n    return arr.reduce(function (acc, curr) {\n      return acc + curr;\n    }, 0);\n  },\n  // create an array of numbers between min and max (edges included)\n  range: function range(min, max) {\n    return Array.from({\n      length: max - min + 1\n    }, function (_, i) {\n      return min + i;\n    });\n  },\n  // pick a random number between min and max (edges included)\n  random: function random(min, max) {\n    return min + Math.floor(Math.random() * (max - min + 1));\n  },\n  // Given an array of numbers and a max...\n  // Pick a random sum (< max) from the set of all available sums in arr\n  randomSumIn: function randomSumIn(arr, max) {\n    var sets = [[]];\n    var sums = [];\n\n    for (var i = 0; i < arr.length; i++) {\n      for (var j = 0, len = sets.length; j < len; j++) {\n        var candidateSet = sets[j].concat(arr[i]);\n        var candidateSum = utils.sum(candidateSet);\n\n        if (candidateSum <= max) {\n          sets.push(candidateSet);\n          sums.push(candidateSum);\n        }\n      }\n    }\n\n    return sums[utils.random(0, sums.length - 1)];\n  }\n};\nvar _default = utils;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbInV0aWxzIiwic3VtIiwiYXJyIiwicmVkdWNlIiwiYWNjIiwiY3VyciIsInJhbmdlIiwibWluIiwibWF4IiwiQXJyYXkiLCJmcm9tIiwibGVuZ3RoIiwiXyIsImkiLCJyYW5kb20iLCJNYXRoIiwiZmxvb3IiLCJyYW5kb21TdW1JbiIsInNldHMiLCJzdW1zIiwiaiIsImxlbiIsImNhbmRpZGF0ZVNldCIsImNvbmNhdCIsImNhbmRpZGF0ZVN1bSIsInB1c2giXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0EsSUFBTUEsS0FBSyxHQUFHO0FBQ1Y7QUFDQUMsRUFBQUEsR0FBRyxFQUFFLGFBQUFDLEdBQUc7QUFBQSxXQUFJQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxVQUFDQyxHQUFELEVBQU1DLElBQU47QUFBQSxhQUFlRCxHQUFHLEdBQUdDLElBQXJCO0FBQUEsS0FBWCxFQUFzQyxDQUF0QyxDQUFKO0FBQUEsR0FGRTtBQUlWO0FBQ0FDLEVBQUFBLEtBQUssRUFBRSxlQUFDQyxHQUFELEVBQU1DLEdBQU47QUFBQSxXQUFjQyxLQUFLLENBQUNDLElBQU4sQ0FBVztBQUFFQyxNQUFBQSxNQUFNLEVBQUVILEdBQUcsR0FBR0QsR0FBTixHQUFZO0FBQXRCLEtBQVgsRUFBc0MsVUFBQ0ssQ0FBRCxFQUFJQyxDQUFKO0FBQUEsYUFBVU4sR0FBRyxHQUFHTSxDQUFoQjtBQUFBLEtBQXRDLENBQWQ7QUFBQSxHQUxHO0FBT1Y7QUFDQUMsRUFBQUEsTUFBTSxFQUFFLGdCQUFDUCxHQUFELEVBQU1DLEdBQU47QUFBQSxXQUFjRCxHQUFHLEdBQUdRLElBQUksQ0FBQ0MsS0FBTCxDQUFXRCxJQUFJLENBQUNELE1BQUwsTUFBaUJOLEdBQUcsR0FBR0QsR0FBTixHQUFZLENBQTdCLENBQVgsQ0FBcEI7QUFBQSxHQVJFO0FBVVY7QUFDQTtBQUNBVSxFQUFBQSxXQUFXLEVBQUUscUJBQUNmLEdBQUQsRUFBTU0sR0FBTixFQUFjO0FBQ3ZCLFFBQU1VLElBQUksR0FBRyxDQUFDLEVBQUQsQ0FBYjtBQUNBLFFBQU1DLElBQUksR0FBRyxFQUFiOztBQUNBLFNBQUssSUFBSU4sQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR1gsR0FBRyxDQUFDUyxNQUF4QixFQUFnQ0UsQ0FBQyxFQUFqQyxFQUFxQztBQUNqQyxXQUFLLElBQUlPLENBQUMsR0FBRyxDQUFSLEVBQVdDLEdBQUcsR0FBR0gsSUFBSSxDQUFDUCxNQUEzQixFQUFtQ1MsQ0FBQyxHQUFHQyxHQUF2QyxFQUE0Q0QsQ0FBQyxFQUE3QyxFQUFpRDtBQUM3QyxZQUFNRSxZQUFZLEdBQUdKLElBQUksQ0FBQ0UsQ0FBRCxDQUFKLENBQVFHLE1BQVIsQ0FBZXJCLEdBQUcsQ0FBQ1csQ0FBRCxDQUFsQixDQUFyQjtBQUNBLFlBQU1XLFlBQVksR0FBR3hCLEtBQUssQ0FBQ0MsR0FBTixDQUFVcUIsWUFBVixDQUFyQjs7QUFDQSxZQUFJRSxZQUFZLElBQUloQixHQUFwQixFQUF5QjtBQUNyQlUsVUFBQUEsSUFBSSxDQUFDTyxJQUFMLENBQVVILFlBQVY7QUFDQUgsVUFBQUEsSUFBSSxDQUFDTSxJQUFMLENBQVVELFlBQVY7QUFDSDtBQUNKO0FBQ0o7O0FBQ0QsV0FBT0wsSUFBSSxDQUFDbkIsS0FBSyxDQUFDYyxNQUFOLENBQWEsQ0FBYixFQUFnQkssSUFBSSxDQUFDUixNQUFMLEdBQWMsQ0FBOUIsQ0FBRCxDQUFYO0FBQ0g7QUExQlMsQ0FBZDtlQTZCZVgsSyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFBMQ1xcUHJvamVjdHNcXGNhbGN1bGF0b3JcXHNyY1xcY29tcG9uZW50c1xcIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWF0aCBzY2llbmNlXHJcbmNvbnN0IHV0aWxzID0ge1xyXG4gICAgLy8gU3VtIGFuIGFycmF5XHJcbiAgICBzdW06IGFyciA9PiBhcnIucmVkdWNlKChhY2MsIGN1cnIpID0+IGFjYyArIGN1cnIsIDApLFxyXG5cclxuICAgIC8vIGNyZWF0ZSBhbiBhcnJheSBvZiBudW1iZXJzIGJldHdlZW4gbWluIGFuZCBtYXggKGVkZ2VzIGluY2x1ZGVkKVxyXG4gICAgcmFuZ2U6IChtaW4sIG1heCkgPT4gQXJyYXkuZnJvbSh7IGxlbmd0aDogbWF4IC0gbWluICsgMSB9LCAoXywgaSkgPT4gbWluICsgaSksXHJcblxyXG4gICAgLy8gcGljayBhIHJhbmRvbSBudW1iZXIgYmV0d2VlbiBtaW4gYW5kIG1heCAoZWRnZXMgaW5jbHVkZWQpXHJcbiAgICByYW5kb206IChtaW4sIG1heCkgPT4gbWluICsgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbiArIDEpKSxcclxuXHJcbiAgICAvLyBHaXZlbiBhbiBhcnJheSBvZiBudW1iZXJzIGFuZCBhIG1heC4uLlxyXG4gICAgLy8gUGljayBhIHJhbmRvbSBzdW0gKDwgbWF4KSBmcm9tIHRoZSBzZXQgb2YgYWxsIGF2YWlsYWJsZSBzdW1zIGluIGFyclxyXG4gICAgcmFuZG9tU3VtSW46IChhcnIsIG1heCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHNldHMgPSBbW11dO1xyXG4gICAgICAgIGNvbnN0IHN1bXMgPSBbXTtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBmb3IgKGxldCBqID0gMCwgbGVuID0gc2V0cy5sZW5ndGg7IGogPCBsZW47IGorKykge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgY2FuZGlkYXRlU2V0ID0gc2V0c1tqXS5jb25jYXQoYXJyW2ldKTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGNhbmRpZGF0ZVN1bSA9IHV0aWxzLnN1bShjYW5kaWRhdGVTZXQpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGNhbmRpZGF0ZVN1bSA8PSBtYXgpIHtcclxuICAgICAgICAgICAgICAgICAgICBzZXRzLnB1c2goY2FuZGlkYXRlU2V0KTtcclxuICAgICAgICAgICAgICAgICAgICBzdW1zLnB1c2goY2FuZGlkYXRlU3VtKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gc3Vtc1t1dGlscy5yYW5kb20oMCwgc3Vtcy5sZW5ndGggLSAxKV07XHJcbiAgICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdXRpbHM7Il19",
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "utils",
        "sum",
        "arr",
        "reduce",
        "acc",
        "curr",
        "range",
        "min",
        "max",
        "Array",
        "from",
        "length",
        "_",
        "i",
        "random",
        "Math",
        "floor",
        "randomSumIn",
        "sets",
        "sums",
        "j",
        "len",
        "candidateSet",
        "concat",
        "candidateSum",
        "push"
      ],
      "mappings": ";;;;;;AAAA;AACA,IAAMA,KAAK,GAAG;AACV;AACAC,EAAAA,GAAG,EAAE,aAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,MAAJ,CAAW,UAACC,GAAD,EAAMC,IAAN;AAAA,aAAeD,GAAG,GAAGC,IAArB;AAAA,KAAX,EAAsC,CAAtC,CAAJ;AAAA,GAFE;AAIV;AACAC,EAAAA,KAAK,EAAE,eAACC,GAAD,EAAMC,GAAN;AAAA,WAAcC,KAAK,CAACC,IAAN,CAAW;AAAEC,MAAAA,MAAM,EAAEH,GAAG,GAAGD,GAAN,GAAY;AAAtB,KAAX,EAAsC,UAACK,CAAD,EAAIC,CAAJ;AAAA,aAAUN,GAAG,GAAGM,CAAhB;AAAA,KAAtC,CAAd;AAAA,GALG;AAOV;AACAC,EAAAA,MAAM,EAAE,gBAACP,GAAD,EAAMC,GAAN;AAAA,WAAcD,GAAG,GAAGQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,MAAiBN,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,CAApB;AAAA,GARE;AAUV;AACA;AACAU,EAAAA,WAAW,EAAE,qBAACf,GAAD,EAAMM,GAAN,EAAc;AACvB,QAAMU,IAAI,GAAG,CAAC,EAAD,CAAb;AACA,QAAMC,IAAI,GAAG,EAAb;;AACA,SAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,GAAG,CAACS,MAAxB,EAAgCE,CAAC,EAAjC,EAAqC;AACjC,WAAK,IAAIO,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGH,IAAI,CAACP,MAA3B,EAAmCS,CAAC,GAAGC,GAAvC,EAA4CD,CAAC,EAA7C,EAAiD;AAC7C,YAAME,YAAY,GAAGJ,IAAI,CAACE,CAAD,CAAJ,CAAQG,MAAR,CAAerB,GAAG,CAACW,CAAD,CAAlB,CAArB;AACA,YAAMW,YAAY,GAAGxB,KAAK,CAACC,GAAN,CAAUqB,YAAV,CAArB;;AACA,YAAIE,YAAY,IAAIhB,GAApB,EAAyB;AACrBU,UAAAA,IAAI,CAACO,IAAL,CAAUH,YAAV;AACAH,UAAAA,IAAI,CAACM,IAAL,CAAUD,YAAV;AACH;AACJ;AACJ;;AACD,WAAOL,IAAI,CAACnB,KAAK,CAACc,MAAN,CAAa,CAAb,EAAgBK,IAAI,CAACR,MAAL,GAAc,CAA9B,CAAD,CAAX;AACH;AA1BS,CAAd;eA6BeX,K",
      "sourceRoot": "C:\\Users\\PLC\\Projects\\calculator\\src\\components\\",
      "sourcesContent": [
        "// Math science\r\nconst utils = {\r\n    // Sum an array\r\n    sum: arr => arr.reduce((acc, curr) => acc + curr, 0),\r\n\r\n    // create an array of numbers between min and max (edges included)\r\n    range: (min, max) => Array.from({ length: max - min + 1 }, (_, i) => min + i),\r\n\r\n    // pick a random number between min and max (edges included)\r\n    random: (min, max) => min + Math.floor(Math.random() * (max - min + 1)),\r\n\r\n    // Given an array of numbers and a max...\r\n    // Pick a random sum (< max) from the set of all available sums in arr\r\n    randomSumIn: (arr, max) => {\r\n        const sets = [[]];\r\n        const sums = [];\r\n        for (let i = 0; i < arr.length; i++) {\r\n            for (let j = 0, len = sets.length; j < len; j++) {\r\n                const candidateSet = sets[j].concat(arr[i]);\r\n                const candidateSum = utils.sum(candidateSet);\r\n                if (candidateSum <= max) {\r\n                    sets.push(candidateSet);\r\n                    sums.push(candidateSum);\r\n                }\r\n            }\r\n        }\r\n        return sums[utils.random(0, sums.length - 1)];\r\n    },\r\n};\r\n\r\nexport default utils;"
      ]
    },
    "sourceType": "script",
    "mtime": 1596581831432
  }
}